apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'org.ysb33r.doxygen'

android {
    compileSdkVersion 31
    buildToolsVersion '31.0.0'
    ndkVersion "16.1.4479499"

    defaultConfig {
        minSdkVersion 14
        versionName "0.1.6"

        externalNativeBuild {
            ndk {
                abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
            }
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

doxygen
{
    generate_latex false
    generate_html false
    generate_xml true

    source new File(projectDir,'src/main/java/android/widget')
    source new File(projectDir,'src/main/java/dev/topping/')
}

/*def applicationId = ""
project.afterEvaluate {
    project.android.applicationVariants.all { variant ->
        applicationId = [variant.mergedFlavor.applicationId, variant.buildType.applicationIdSuffix].findAll().join()
    }
}*/

gradle.taskGraph.afterTask { task, state ->
    if(task.path.contains("doxygen"))
    {
        project.delete(files("${projectDir}doclua.zip"))
        def os = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.currentOperatingSystem
        String[] args = null
        if(os.toFamilyName().equalsIgnoreCase("windows"))
            args = ["cmd", "/c", "java -jar ${projectDir}/parser.jar 0 ${buildDir}/docs/doxygen/xml ${projectDir}/doclua && powershell Compress-Archive ${projectDir}/doclua/. ${projectDir}/doclua.zip"]
        else
            args = ["sh", "-c", "java -jar ${projectDir}/parser.jar 0 ${buildDir}/docs/doxygen/xml ${projectDir}/doclua | zip -r ${projectDir}/doclua.zip ${projectDir}/doclua/"]
        println(args[2])
        def proc = args.execute()
        proc.in.eachLine {line -> println line}
        //proc.err.eachLine {line -> println 'ERROR: ' + line}
        proc.waitFor()
        project.delete(files("${projectDir}/doclua"))
        //print tasks.findByName("doxygen");
        //tasks.findByName("doxygen").execute()
        /*def val = applicationId.replace(".", "/");
        println "${buildDir}/generated/source/r/" + val + "/"*/

    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.3.1"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.3.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:2.3.5"
    implementation 'com.google.android.material:material:1.5.0'
    // For control over item selection of both touch and mouse driven selection
    //implementation "androidx.recyclerview:recyclerview-selection:1.1.0-rc03"
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.10'
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.5.10"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "androidx.fragment:fragment:1.3.5"
    implementation "androidx.fragment:fragment-ktx:1.3.5"
}

//Maven publish
ext {
    PUBLISH_GROUP_ID = 'dev.topping'
    PUBLISH_ARTIFACT_ID = 'toppingandroid'
    PUBLISH_VERSION = android.defaultConfig.versionName
}

if(System.env.JITPACK != null || System.env.JITPACK == true) {
    println "Setting for jitpack"
    apply from: "${rootProject.projectDir}/toppingAndroid/publish-jitpack.gradle"
}
else {
    println "Setting for mavencentral"
    apply from: "${rootProject.projectDir}/toppingAndroid/publish-mavencentral.gradle"
}
